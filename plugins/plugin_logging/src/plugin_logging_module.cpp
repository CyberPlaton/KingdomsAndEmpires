#include "plugin_logging_module.hpp"

namespace logging
{
	//------------------------------------------------------------------------------------------------------------------------
	bool init(logging_verbosity verbosity /*=logging_verbosity::logging_verbosity_**/)
	{
		return clog::instance().init(verbosity);
	}

	//------------------------------------------------------------------------------------------------------------------------
	void shutdown()
	{
		clog::instance().shutdown();
	}

	//------------------------------------------------------------------------------------------------------------------------
	float app_runtime()
	{
		return clog::instance().runtime();
	}

	//------------------------------------------------------------------------------------------------------------------------
	float app_runtime_ms()
	{
		return clog::instance().runtime_ms();
	}

	//------------------------------------------------------------------------------------------------------------------------
	void log_trace(stringview_t message)
	{
		clog::instance().trace(message);
	}

	//------------------------------------------------------------------------------------------------------------------------
	void log_debug(stringview_t message)
	{
		clog::instance().debug(message);
	}

	//------------------------------------------------------------------------------------------------------------------------
	void log_info(stringview_t message)
	{
		clog::instance().info(message);
	}

	//------------------------------------------------------------------------------------------------------------------------
	void log_warn(stringview_t message)
	{
		clog::instance().warn(message);
	}

	//------------------------------------------------------------------------------------------------------------------------
	void log_error(stringview_t message)
	{
		clog::instance().error(message);
	}

	//------------------------------------------------------------------------------------------------------------------------
	void log_critical(stringview_t message)
	{
		clog::instance().critical(message);
	}

} //- logging