#include "/common/base.tsl"
#include "/common/math.tsl"

fn lerp(a:float, b:float, t:float) -> float
{
    return (1 - t) * a + t * b;
}

fn lerp(a:vec2, b:vec2, t:vec2) -> vec2
{
    return vec2(lerp(a.x, b.x, t.x), lerp(a.y, b.y, t.y));
};

invariant in vec3 gl_Position
@
    string name = "Lerp";
    int expose = 1;
    string group = "Math";
@;

in sampler2D in_tex;
uniform vec2 u_uv;

@ vertex
fn main()
{
};

@ pixel
fn main() -> void
{
    vec4 color = texture(in_tex, u_uv);
};